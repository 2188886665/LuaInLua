%file "/Users/leegao/sideproject/ParserSiProMo/lua/experimental"
varlist		:=    $var | $var $comma_var_list';
var		:=    'Name' | $prefixexp '[' $exp ']' | $prefixexp '.' 'Name';
comma_name_list		:=    ',' 'Name' | $comma_name_list';
comma_var_list'		:=    $comma_var_list;
prefixexp		:=    $var | $functioncall | '(' $exp ')';
elseif_list		:=    'elseif' $exp 'then' $block $elseif_list';
comma_name_list'		:=    $comma_name_list;
funcname		:=    'Name' $colon_name_opt | 'Name' $dot_name_list_opt $colon_name_opt;
fieldsep_field_list_opt		:=    $fieldsep_field_list;
funcbody		:=    '(' ')' $block 'end' | '(' $parlist_opt ')' $block 'end';
comma_name_list_opt		:=    $comma_name_list;
exp		:=    'nil' | 'false' | 'true' | 'Numeral' | 'LiteralString' | '...' | $functiondef | $prefixexp | $tableconstructor | $exp $binop $exp | $unop $exp;
comma_var_list		:=    ',' $var | $comma_var_list';
tableconstructor		:=    '{' '}' | '{' $fieldlist_opt '}';
elseif_list'		:=    $elseif_list;
namelist		:=    'Name' 'comma_name_list_opt';
dot_name_list		:=    '.' 'Name' | $dot_name_list';
eq_explist_opt		:=    '=' $explist;
retstat_opt		:=    $retstat;
explist		:=    $exp;
parlist		:=    $namelist | $namelist $comma_varargs_opt | '...';
block		:=    $stat_list | $stat_list $retstat_opt;
stat		:=    ';' | $varlist '=' $explist | $functioncall | $label | 'break' | 'goto' 'Name' | 'do' $block 'end' | 'while' $exp 'do' $block 'end' | 'repeat' $block 'until' $exp | 'if' $exp 'then' $block $else_opt 'end' | 'if' $exp 'then' $block $elseif_list_opt $else_opt 'end' | 'for' 'Name' '=' $exp ',' $exp 'do' $block 'end' | 'for' 'Name' '=' $exp ',' $exp $comma_exp_opt 'do' $block 'end' | 'for' $namelist 'in' $explist 'do' $block 'end' | 'function' $funcname $funcbody | 'local' 'function' 'Name' $funcbody | 'local' $namelist | 'local' $namelist $eq_explist_opt;
semicolon_opt		:=    ';';
unop		:=    '-' | 'not' | '#' | '~';
elseif_list_opt		:=    $elseif_list;
fieldsep_field_list'		:=    $fieldsep_field_list;
dot_name_list_opt		:=    $dot_name_list;
binop		:=    '+' | '-' | '*' | '/' | '//' | '^' | '%' | '&' | '~' | '|' | '>>' | '<<' | '..' | '<' | '<=' | '>' | '>=' | '==' | '~=' | 'and' | 'or';
stat_list		:=    $stat | $stat $stat_list';
comma_exp_opt		:=    ',' $exp;
args		:=    '(' ')' | '(' $explist_opt ')' | $tableconstructor | 'LiteralString';
parlist_opt		:=    $parlist;
label		:=    '::' 'Name' '::';
fieldlist		:=    $field $fieldsep_opt | $field $fieldsep_field_list_opt $fieldsep_opt;
fieldlist_opt		:=    $fieldlist;
explist_opt		:=    $explist;
retstat		:=    'return' $semicolon_opt | 'return' $explist_opt $semicolon_opt;
comma_varargs_opt		:=    ',' '...';
else_opt		:=    'else' $block;
fieldsep_opt		:=    $fieldsep;
functioncall		:=    $prefixexp $args | $prefixexp ':' 'Name' $args;
dot_name_list'		:=    $dot_name_list;
colon_name_opt		:=    ':' 'Name';
field		:=    '[' $exp ']' '=' $exp | 'Name' '=' $exp | $exp;
functiondef		:=    'function' $funcbody;
fieldsep_field_list		:=    $fieldsep $field | $fieldsep_field_list';
fieldsep		:=    ',' | ';';
root		:=    $block;
stat_list'		:=    $stat_list;