%file "/Users/leegao/sideproject/ParserSiProMo/lua/parser"

root := $block;

block := $stat*;

stat := ';' | 
  $varlist '=' $explist | 
  $functioncall | // ( conflicts with var's (
  $label | 
  break | 
  goto Name | 
  do $block end | 
  while $exp do $block end | 
  repeat $block until $exp | 
  if $exp then $block (elseif $exp then $block;)* (else $block;)? end | 
  for (Name '=' $exp ',' $exp (',' $exp;)? do $block end | $namelist in $explist do $block end;) | 
  function $funcname $funcbody | 
  local (function Name $funcbody | $namelist ('=' $explist;)?;);

retstat := return $explist? ';'?;

label := '::' Name '::';

funcname := Name ('.' Name;)* (':' Name;)?;

varlist := $var (',' $var;)*;

var := Name | $prefixexp ('[' $exp ']' | '.' Name;);

namelist := Name (',' Name;)*;

explist := $exp (',' $exp;)*;

exp := (nil | false | true | Number | String | '...' | $functiondef | 
  $prefixexp | $tableconstructor | $unop exp;) $binop $exp;

prefixexp := $var | $functioncall | '(' $exp ')';

functioncall := $prefixexp ($args | ':' Name $args;);

args := '(' $explist? ')' | $tableconstructor | String;

functiondef := function $funcbody;

funcbody := '(' $parlist? ')' $block end;

parlist := $namelist (',' '...';)? | '...';

tableconstructor := '{' $fieldlist? '}';

fieldlist := $field ($fieldsep $field;)*;

field := '[' $exp ']' '=' $exp | Name '=' $exp | $exp;

fieldsep := ',' | ';';

binop := '+' | '-' | '*' | '/' | '^' | '%' | '..' | 
  '<' | '<=' | '>' | '>=' | '==' | '~=' | 
  and | or;

unop := '-' | not | '#';