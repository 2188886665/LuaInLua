digraph {
  rankdir=LR;
  size="8,5"
  node[shape=circle,label=""];
  stat_group_3[label="stat_group_3 end,else,,elseif"];
  field[label="field ,,;,,}"];
  assignment_or_call_group_1[label="assignment_or_call_group_1 ::,local,repeat,do,(,,goto,until,Name,__EOF__,elseif,function,;,if,else,while,break,for,end"];
  parlist_plus_1[label="parlist_plus_1 Name,..."];
  args[label="args ::,..,/,.,-,,,+,repeat,do,(,goto,until,break,>,elseif,function,;,:,and,while,for,end,local,__EOF__,<=,,~=,{,==,Name,%,^,*,if,else,or,[,String,<,>=,="];
  primaryexp[label="primaryexp ::,..,/,.,-,,,+,repeat,do,(,goto,until,break,>,elseif,function,;,:,and,while,for,end,local,__EOF__,<=,,~=,if,=,Name,>=,^,<,*,[,else,or,String,%,==,{"];
  args_maybe_1[label="args_maybe_1 )"];
  stat_group_1_group_1[label="stat_group_1_group_1 ::,local,__EOF__,do,(,,goto,until,Name,repeat,elseif,function,;,if,break,while,else,for,end"];
  stat_group_1[label="stat_group_1 ::,local,__EOF__,do,(,,goto,until,Name,repeat,elseif,function,;,if,break,while,else,for,end"];
  fieldlist_group_1[label="fieldlist_group_1 ,,;,,}"];
  suffixedexp_group_1[label="suffixedexp_group_1 ::,..,/,.,-,,,+,repeat,do,(,goto,until,break,>,elseif,function,;,:,and,while,for,end,local,__EOF__,<=,,~=,=,else,Name,>=,^,<,*,[,or,if,String,%,==,{"];
  exp_group_1[label="exp_group_1 %,..,>=,^,/,or,-,<,+,*,and,>,<=,==,~="];
  tableconstructor[label="tableconstructor ::,..,/,.,-,,,+,repeat,do,(,goto,until,break,>,elseif,function,{,:,and,while,for,end,local,__EOF__,<=,,~=,%,or,Name,*,^,<,==,if,else,>=,String,[,=,;"];
  fieldsep[label="fieldsep _,true,not,-,nil,Number,function,{,[,String,(,...,Name,false"];
  explist[label="explist ::,local,repeat,do,(,,goto,until,Name,),__EOF__,elseif,function,;,if,else,while,break,for,end"];
  funcname_star_1[label="funcname_star_1 (,,:"];
  unop[label="unop exp"];
  funcname_maybe_1[label="funcname_maybe_1 ,("];
  retstat[label="retstat "];
  exp[label="exp then,::,local,,,__EOF__,do,(,,goto,),until,repeat,Name,;,],},function,if,break,else,while,elseif,for,end"];
  parlist[label="parlist ,)"];
  stat_group_4[label="stat_group_4 ,end"];
  retstat_maybe_1[label="retstat_maybe_1 "];
  root[label="root __EOF__"];
  parlist_star_1[label="parlist_star_1 Name,,..."];
  funcname[label="funcname ("];
  suffixedexp[label="suffixedexp ::,..,/,-,,,+,repeat,do,(,goto,until,break,>,elseif,function,;,and,while,for,end,local,__EOF__,<=,==,~=,Name,^,%,or,else,*,<,,>=,=,if"];
  parlist_group_1[label="parlist_group_1 Name,,..."];
  stat_group_2_group_1[label="stat_group_2_group_1 ,do"];
  explist_star_1[label="explist_star_1 ::,local,repeat,do,(,,goto,until,Name,),__EOF__,elseif,function,;,if,else,while,break,for,end"];
  label[label="label ::,local,__EOF__,do,(,,goto,until,Name,repeat,elseif,function,;,if,break,while,else,for,end"];
  binop[label="binop _,true,Name,Number,-,function,{,nil,not,String,(,...,false"];
  stat_star_1[label="stat_star_1 else,,end"];
  parlist_group_2[label="parlist_group_2 ,)"];
  funcname_group_1[label="funcname_group_1 (,:,,."];
  funcname_group_2[label="funcname_group_2 ,("];
  namelist_star_1[label="namelist_star_1 ::,local,__EOF__,do,(,,goto,until,repeat,Name,in,;,=,function,else,break,if,while,elseif,for,end"];
  stat_maybe_1[label="stat_maybe_1 end"];
  stat_group_1_maybe_1[label="stat_group_1_maybe_1 ::,local,repeat,do,(,,goto,until,Name,__EOF__,elseif,function,;,if,else,while,break,for,end"];
  funcbody_maybe_1[label="funcbody_maybe_1 )"];
  assignment_or_call[label="assignment_or_call ::,local,__EOF__,do,(,,goto,until,Name,repeat,elseif,function,;,if,break,while,else,for,end"];
  stat_group_2_maybe_1[label="stat_group_2_maybe_1 do"];
  fieldlist[label="fieldlist ,}"];
  retstat_maybe_2[label="retstat_maybe_2 "];
  namelist[label="namelist ::,local,__EOF__,do,(,,goto,until,in,Name,=,repeat,elseif,function,;,if,break,while,else,for,end"];
  suffixedexp_star_1[label="suffixedexp_star_1 ::,..,/,-,,,+,repeat,do,(,goto,until,break,>,elseif,function,;,and,while,for,end,local,__EOF__,<=,==,~=,Name,^,,%,if,or,*,<,>=,else,="];
  explist_group_1[label="explist_group_1 ::,local,,,repeat,),(,,goto,until,Name,do,__EOF__,elseif,function,;,break,else,while,if,for,end"];
  funcbody[label="funcbody ::,..,/,-,+,repeat,do,(,goto,until,break,>,elseif,<,;,and,while,for,end,local,__EOF__,<=,==,>=,Name,or,^,else,~=,function,%,*,,if"];
  functiondef[label="functiondef ~=,==,..,>=,>,/,^,-,<,+,*,and,or,<=,,%"];
  tableconstructor_maybe_1[label="tableconstructor_maybe_1 }"];
  block_star_1[label="block_star_1 else,until,end,__EOF__,,elseif"];
  block[label="block else,until,end,__EOF__,,elseif"];
  stat_group_2[label="stat_group_2 ::,local,__EOF__,do,(,,goto,until,Name,repeat,elseif,function,;,if,break,while,else,for,end"];
  stat[label="stat ::,local,repeat,do,(,,goto,until,Name,__EOF__,elseif,function,;,if,else,while,break,for,end"];
  fieldlist_star_1[label="fieldlist_star_1 ,}"];
  namelist_group_1[label="namelist_group_1 ::,local,,,repeat,do,(,,goto,until,__EOF__,Name,=,elseif,in,function,;,break,if,while,else,for,end"];
    root -> block[label="table: 0x501790"];
    block_star_1 -> block_star_1[label="table: 0x5058d0"];
    block_star_1 -> stat[label="table: 0x505a60"];
    parlist_plus_1 -> parlist_group_1[label="table: 0x50a8a0"];
    parlist_plus_1 -> parlist_star_1[label="table: 0x50ac30"];
    args -> tableconstructor[label="table: 0x509a40"];
    args -> args_maybe_1[label="table: 0x5018f0"];
    primaryexp -> exp[label="table: 0x508410"];
    args_maybe_1 -> explist[label="table: 0x501ba0"];
    stat_group_1_group_1 -> explist[label="table: 0x506160"];
    stat_group_1 -> namelist[label="table: 0x507040"];
    stat_group_1 -> stat_group_1_maybe_1[label="table: 0x505f40"];
    stat_group_1 -> funcbody[label="table: 0x504d50"];
    fieldlist_group_1 -> field[label="table: 0x506220"];
    fieldlist_group_1 -> fieldsep[label="table: 0x50bc00"];
    suffixedexp_group_1 -> args[label="table: 0x509730"];
    suffixedexp_group_1 -> exp[label="table: 0x500640"];
    exp_group_1 -> functiondef[label="table: 0x5029d0"];
    exp_group_1 -> unop[label="table: 0x50b8f0"];
    exp_group_1 -> suffixedexp[label="table: 0x508b30"];
    exp_group_1 -> tableconstructor[label="table: 0x509be0"];
    explist_group_1 -> exp[label="table: 0x506ea0"];
    explist -> exp[label="table: 0x507d10"];
    explist -> explist_star_1[label="table: 0x506b10"];
    funcname_star_1 -> funcname_group_1[label="table: 0x500500"];
    funcname_star_1 -> funcname_star_1[label="table: 0x501ef0"];
    funcname_maybe_1 -> funcname_group_2[label="table: 0x50b280"];
    field -> exp[label="table: 0x5006a0"];
    exp -> exp_group_1[label="table: 0x5089a0"];
    exp -> binop[label="table: 0x502f10"];
    exp -> exp[label="table: 0x507090"];
    parlist -> parlist_group_2[label="table: 0x500fd0"];
    parlist -> parlist_plus_1[label="table: 0x507800"];
    stat_group_4 -> block[label="table: 0x500c00"];
    retstat_maybe_1 -> explist[label="table: 0x506790"];
    tableconstructor -> tableconstructor_maybe_1[label="table: 0x509e00"];
    parlist_star_1 -> parlist_group_1[label="table: 0x50af60"];
    parlist_star_1 -> parlist_star_1[label="table: 0x50adc0"];
    funcname -> funcname_maybe_1[label="table: 0x5038f0"];
    funcname -> funcname_star_1[label="table: 0x5048e0"];
    suffixedexp -> primaryexp[label="table: 0x508230"];
    suffixedexp -> suffixedexp_star_1[label="table: 0x5091f0"];
    stat_group_2_group_1 -> exp[label="table: 0x507a80"];
    explist_star_1 -> explist_group_1[label="table: 0x506ce0"];
    explist_star_1 -> explist_star_1[label="table: 0x500680"];
    stat_star_1 -> stat_star_1[label="table: 0x5039e0"];
    stat_star_1 -> stat_group_3[label="table: 0x503ec0"];
    namelist_star_1 -> namelist_star_1[label="table: 0x505440"];
    namelist_star_1 -> namelist_group_1[label="table: 0x50bf30"];
    stat_group_2 -> block[label="table: 0x504530"];
    stat_group_2 -> exp[label="table: 0x507dd0"];
    stat_group_2 -> namelist[label="table: 0x509350"];
    stat_group_2 -> stat_group_2_maybe_1[label="table: 0x507650"];
    stat_group_2 -> explist[label="table: 0x506980"];
    stat_group_1_maybe_1 -> stat_group_1_group_1[label="table: 0x503d80"];
    funcbody_maybe_1 -> parlist[label="table: 0x501a60"];
    fieldlist_star_1 -> fieldlist_group_1[label="table: 0x50a660"];
    fieldlist_star_1 -> fieldlist_star_1[label="table: 0x50a460"];
    fieldlist -> field[label="table: 0x509530"];
    fieldlist -> fieldlist_star_1[label="table: 0x50a280"];
    assignment_or_call -> suffixedexp[label="table: 0x508ff0"];
    assignment_or_call -> assignment_or_call_group_1[label="table: 0x505bc0"];
    namelist -> namelist_star_1[label="table: 0x501530"];
    retstat -> retstat_maybe_1[label="table: 0x5065b0"];
    retstat -> retstat_maybe_2[label="table: 0x50b5c0"];
    stat_group_3 -> block[label="table: 0x503fe0"];
    stat_group_3 -> exp[label="table: 0x507210"];
    funcbody -> block[label="table: 0x5050c0"];
    funcbody -> funcbody_maybe_1[label="table: 0x502cb0"];
    functiondef -> funcbody[label="table: 0x504b30"];
    tableconstructor_maybe_1 -> fieldlist[label="table: 0x50a040"];
    suffixedexp_star_1 -> suffixedexp_group_1[label="table: 0x509570"];
    suffixedexp_star_1 -> suffixedexp_star_1[label="table: 0x5093b0"];
    block -> block_star_1[label="table: 0x5034e0"];
    stat_maybe_1 -> stat_group_4[label="table: 0x5032e0"];
    stat -> funcname[label="table: 0x5073c0"];
    stat -> assignment_or_call[label="table: 0x508e50"];
    stat -> label[label="table: 0x506310"];
    stat -> funcbody[label="table: 0x504ef0"];
    stat -> block[label="table: 0x5052b0"];
    stat -> exp[label="table: 0x5086d0"];
    stat -> stat_star_1[label="table: 0x503ba0"];
    stat -> stat_maybe_1[label="table: 0x5030a0"];
    stat -> stat_group_2[label="table: 0x504350"];
    stat -> stat_group_1[label="table: 0x505c20"];
    stat_group_2_maybe_1 -> stat_group_2_group_1[label="table: 0x5078a0"];
}