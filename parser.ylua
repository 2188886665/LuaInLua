// Parser frontend grammar (written in the parser for the same parser)
/*
root   = expr
rexpr  = %eps | $expr | PLUS $expr
expr   = $consts $rexpr | ID $rexpr | FUN ID -> $expr | LPAREN $expr RPAREN $rexpr
consts = NUMBER | STRING | TRUE | FALSE
*/
%file "/Users/leegao/sideproject/ParserSiProMo/experimental_parser.lua"

%require "ll1_tokenizer"

root   := $expr;
rexpr  := %eps | $expr | PLUS $expr;
expr   := $consts $rexpr | ID $rexpr | FUN ID ARROW $expr | LPAREN $expr RPAREN $rexpr;
consts := NUMBER | STRING | TRUE | FALSE;